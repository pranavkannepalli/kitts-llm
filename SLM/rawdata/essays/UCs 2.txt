This year, I had the opportunity to intern at Applied Systems, a billion-dollar insurance tech company. Initially, I expected merely to shadow professionals and gain exposure to the field, still a really exciting prospect. However, at my very first standup, early in the morning at 6 AM, they told me they were entrusting me with building a test playground for their clients, work typically given to a college graduate. Rather than being overwhelmed, I saw this as a chance to prove myself and dive headfirst into real-world software development.
Beyond the hours, the first thing I had to get adjusted to was Agile development, a project management technique that prioritizes iterative development and continuous feedback. Coming from school projects where I could code at my own pace, I now had to adapt to two-week sprints, daily standups, tickets I was responsible for, and regular code reviews. I learned how to break down complex tasks into manageable sprints, participate in technical discussions, and adapt my work based on team feedback. 
As I continued coding, I realized my project was much more than just building a website. I found myself diving into Kubernetes manifest files to configure services that would interface with my playground and modifying existing services written in Go to incorporate user feedback. The scope of the project expanded beyond frontend development into the realm of systems architecture and backend services. The stakes of this responsibility became crystal clear one Friday afternoon when I nearly brought down a production deployment while adjusting these services. Thankfully, my colleagues guided me through the intricacies of enterprise software development, teaching me how to safely modify production services and manage deployments. 
Through this internship, I grew from a high school student hoping to learn about software development into an engineer building products used by real clients. Each challenge—from those early morning standups to navigating complex system architectures—reinforced that software development is a journey of continuous learning. By embracing responsibilities far beyond my initial expectations, I discovered that the greatest growth comes from taking on challenges that seem just out of reach.